# Generated by Django 3.2.19 on 2023-06-06 06:47

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator(message='Invalid email address.')])),
                ('password', models.CharField(max_length=128)),
                ('bank_account', models.CharField(max_length=50, null=True)),
                ('upi_id', models.CharField(max_length=50, null=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'user',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='User_token',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=255, unique=True)),
                ('expiration_time', models.TimeField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='library.user')),
            ],
            options={
                'verbose_name': 'User_Token',
                'verbose_name_plural': 'User_Tokens',
                'db_table': 'user_token',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('royalty', models.DecimalField(decimal_places=2, max_digits=5)),
                ('file_path', models.CharField(max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('author_id', models.ForeignKey(db_column='author_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='library.user')),
            ],
            options={
                'verbose_name': 'Book',
                'verbose_name_plural': 'Books',
                'db_table': 'book',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=6)),
                ('time', models.TimeField(auto_now=True)),
                ('book_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.book')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.user')),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'db_table': 'transaction',
                'managed': True,
                'unique_together': {('user_id', 'book_id')},
            },
        ),
        migrations.CreateModel(
            name='Reading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_completed', models.BooleanField(default=False)),
                ('book_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.book')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.user')),
            ],
            options={
                'verbose_name': 'Reading',
                'verbose_name_plural': 'Reading',
                'db_table': 'reading',
                'managed': True,
                'unique_together': {('user_id', 'book_id')},
            },
        ),
    ]
